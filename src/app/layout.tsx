import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import HeaderWrapper from "./Components/HeaderWrapper"; // Import client component
import { headers } from "next/headers"; // To get pathname on the server side


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Expense Tracker",
  description: "Generated by create next app",
};

export default  async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = (await headers()).get("x-invoke-path") || ""; // Get pathname on the server side
  console.log(pathname);
  const hideHeaderPaths = ["/Login", "/Sign-up", "/Password"];
  const shouldHideHeader = hideHeaderPaths.includes(pathname);

  return (
    <html lang="en">
      <head>
      </head>
      <body suppressHydrationWarning= {true}
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="bg-gray-100 min-h-content">
        <HeaderWrapper /> {/* Conditionally renders Header */}
        {/* <Header/> */}
        </div>
        <div>
          {children}
        </div>
      </body>
    </html>
  );
}
